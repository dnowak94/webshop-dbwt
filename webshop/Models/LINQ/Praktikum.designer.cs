#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webshop.Models.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Praktikum")]
	public partial class PraktikumDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertBefreundet(Befreundet instance);
    partial void UpdateBefreundet(Befreundet instance);
    partial void DeleteBefreundet(Befreundet instance);
    partial void InsertZutat(Zutat instance);
    partial void UpdateZutat(Zutat instance);
    partial void DeleteZutat(Zutat instance);
    partial void InsertBE_Nutzer(BE_Nutzer instance);
    partial void UpdateBE_Nutzer(BE_Nutzer instance);
    partial void DeleteBE_Nutzer(BE_Nutzer instance);
    partial void InsertBewertung(Bewertung instance);
    partial void UpdateBewertung(Bewertung instance);
    partial void DeleteBewertung(Bewertung instance);
    partial void InsertBild(Bild instance);
    partial void UpdateBild(Bild instance);
    partial void DeleteBild(Bild instance);
    partial void InsertFE_Nutzer(FE_Nutzer instance);
    partial void UpdateFE_Nutzer(FE_Nutzer instance);
    partial void DeleteFE_Nutzer(FE_Nutzer instance);
    partial void InsertFH_Angehörige(FH_Angehörige instance);
    partial void UpdateFH_Angehörige(FH_Angehörige instance);
    partial void DeleteFH_Angehörige(FH_Angehörige instance);
    partial void InsertGast(Gast instance);
    partial void UpdateGast(Gast instance);
    partial void DeleteGast(Gast instance);
    partial void InserthatRechte(hatRechte instance);
    partial void UpdatehatRechte(hatRechte instance);
    partial void DeletehatRechte(hatRechte instance);
    partial void InserthatZutat(hatZutat instance);
    partial void UpdatehatZutat(hatZutat instance);
    partial void DeletehatZutat(hatZutat instance);
    partial void InsertKategorie(Kategorie instance);
    partial void UpdateKategorie(Kategorie instance);
    partial void DeleteKategorie(Kategorie instance);
    partial void InsertKauft(Kauft instance);
    partial void UpdateKauft(Kauft instance);
    partial void DeleteKauft(Kauft instance);
    partial void InsertMitarbeiter(Mitarbeiter instance);
    partial void UpdateMitarbeiter(Mitarbeiter instance);
    partial void DeleteMitarbeiter(Mitarbeiter instance);
    partial void InsertPreis(Preis instance);
    partial void UpdatePreis(Preis instance);
    partial void DeletePreis(Preis instance);
    partial void InsertProdukt(Produkt instance);
    partial void UpdateProdukt(Produkt instance);
    partial void DeleteProdukt(Produkt instance);
    partial void InsertRechte(Rechte instance);
    partial void UpdateRechte(Rechte instance);
    partial void DeleteRechte(Rechte instance);
    partial void InsertSchreibt(Schreibt instance);
    partial void UpdateSchreibt(Schreibt instance);
    partial void DeleteSchreibt(Schreibt instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertZahlung(Zahlung instance);
    partial void UpdateZahlung(Zahlung instance);
    partial void DeleteZahlung(Zahlung instance);
    #endregion
		
		public PraktikumDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PraktikumConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PraktikumDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PraktikumDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PraktikumDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PraktikumDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Befreundet> Befreundet
		{
			get
			{
				return this.GetTable<Befreundet>();
			}
		}
		
		public System.Data.Linq.Table<Zutat> Zutat
		{
			get
			{
				return this.GetTable<Zutat>();
			}
		}
		
		public System.Data.Linq.Table<BE_Nutzer> BE_Nutzer
		{
			get
			{
				return this.GetTable<BE_Nutzer>();
			}
		}
		
		public System.Data.Linq.Table<Bewertung> Bewertung
		{
			get
			{
				return this.GetTable<Bewertung>();
			}
		}
		
		public System.Data.Linq.Table<Bild> Bild
		{
			get
			{
				return this.GetTable<Bild>();
			}
		}
		
		public System.Data.Linq.Table<FE_Nutzer> FE_Nutzer
		{
			get
			{
				return this.GetTable<FE_Nutzer>();
			}
		}
		
		public System.Data.Linq.Table<FH_Angehörige> FH_Angehörige
		{
			get
			{
				return this.GetTable<FH_Angehörige>();
			}
		}
		
		public System.Data.Linq.Table<Gast> Gast
		{
			get
			{
				return this.GetTable<Gast>();
			}
		}
		
		public System.Data.Linq.Table<hatRechte> hatRechte
		{
			get
			{
				return this.GetTable<hatRechte>();
			}
		}
		
		public System.Data.Linq.Table<hatZutat> hatZutat
		{
			get
			{
				return this.GetTable<hatZutat>();
			}
		}
		
		public System.Data.Linq.Table<Kategorie> Kategorie
		{
			get
			{
				return this.GetTable<Kategorie>();
			}
		}
		
		public System.Data.Linq.Table<Kauft> Kauft
		{
			get
			{
				return this.GetTable<Kauft>();
			}
		}
		
		public System.Data.Linq.Table<Mitarbeiter> Mitarbeiter
		{
			get
			{
				return this.GetTable<Mitarbeiter>();
			}
		}
		
		public System.Data.Linq.Table<Preis> Preis
		{
			get
			{
				return this.GetTable<Preis>();
			}
		}
		
		public System.Data.Linq.Table<Produkt> Produkt
		{
			get
			{
				return this.GetTable<Produkt>();
			}
		}
		
		public System.Data.Linq.Table<Rechte> Rechte
		{
			get
			{
				return this.GetTable<Rechte>();
			}
		}
		
		public System.Data.Linq.Table<Schreibt> Schreibt
		{
			get
			{
				return this.GetTable<Schreibt>();
			}
		}
		
		public System.Data.Linq.Table<Student> Student
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Zahlung> Zahlung
		{
			get
			{
				return this.GetTable<Zahlung>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Befreundet")]
	public partial class Befreundet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_FE_Nutzer1;
		
		private int _FK_FE_Nutzer2;
		
		private EntityRef<FE_Nutzer> _FE_Nutzer;
		
		private EntityRef<FE_Nutzer> _FE_Nutzer1;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_FE_Nutzer1Changing(int value);
    partial void OnFK_FE_Nutzer1Changed();
    partial void OnFK_FE_Nutzer2Changing(int value);
    partial void OnFK_FE_Nutzer2Changed();
    #endregion
		
		public Befreundet()
		{
			this._FE_Nutzer = default(EntityRef<FE_Nutzer>);
			this._FE_Nutzer1 = default(EntityRef<FE_Nutzer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FE_Nutzer1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FE_Nutzer1
		{
			get
			{
				return this._FK_FE_Nutzer1;
			}
			set
			{
				if ((this._FK_FE_Nutzer1 != value))
				{
					if (this._FE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FE_Nutzer1Changing(value);
					this.SendPropertyChanging();
					this._FK_FE_Nutzer1 = value;
					this.SendPropertyChanged("FK_FE_Nutzer1");
					this.OnFK_FE_Nutzer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FE_Nutzer2", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FE_Nutzer2
		{
			get
			{
				return this._FK_FE_Nutzer2;
			}
			set
			{
				if ((this._FK_FE_Nutzer2 != value))
				{
					if (this._FE_Nutzer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FE_Nutzer2Changing(value);
					this.SendPropertyChanging();
					this._FK_FE_Nutzer2 = value;
					this.SendPropertyChanged("FK_FE_Nutzer2");
					this.OnFK_FE_Nutzer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Befreundet", Storage="_FE_Nutzer", ThisKey="FK_FE_Nutzer1", OtherKey="ID", IsForeignKey=true)]
		public FE_Nutzer FE_Nutzer
		{
			get
			{
				return this._FE_Nutzer.Entity;
			}
			set
			{
				FE_Nutzer previousValue = this._FE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._FE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FE_Nutzer.Entity = null;
						previousValue.Befreundet.Remove(this);
					}
					this._FE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.Befreundet.Add(this);
						this._FK_FE_Nutzer1 = value.ID;
					}
					else
					{
						this._FK_FE_Nutzer1 = default(int);
					}
					this.SendPropertyChanged("FE_Nutzer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Befreundet1", Storage="_FE_Nutzer1", ThisKey="FK_FE_Nutzer2", OtherKey="ID", IsForeignKey=true)]
		public FE_Nutzer FE_Nutzer1
		{
			get
			{
				return this._FE_Nutzer1.Entity;
			}
			set
			{
				FE_Nutzer previousValue = this._FE_Nutzer1.Entity;
				if (((previousValue != value) 
							|| (this._FE_Nutzer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FE_Nutzer1.Entity = null;
						previousValue.Befreundet1.Remove(this);
					}
					this._FE_Nutzer1.Entity = value;
					if ((value != null))
					{
						value.Befreundet1.Add(this);
						this._FK_FE_Nutzer2 = value.ID;
					}
					else
					{
						this._FK_FE_Nutzer2 = default(int);
					}
					this.SendPropertyChanged("FE_Nutzer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zutat")]
	public partial class Zutat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Bezeichnung;
		
		private EntitySet<hatZutat> _hatZutat;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBezeichnungChanging(string value);
    partial void OnBezeichnungChanged();
    #endregion
		
		public Zutat()
		{
			this._hatZutat = new EntitySet<hatZutat>(new Action<hatZutat>(this.attach_hatZutat), new Action<hatZutat>(this.detach_hatZutat));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this.OnBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Bezeichnung = value;
					this.SendPropertyChanged("Bezeichnung");
					this.OnBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zutat_hatZutat", Storage="_hatZutat", ThisKey="ID", OtherKey="FK_Zutat")]
		public EntitySet<hatZutat> hatZutat
		{
			get
			{
				return this._hatZutat;
			}
			set
			{
				this._hatZutat.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hatZutat(hatZutat entity)
		{
			this.SendPropertyChanging();
			entity.Zutat = this;
		}
		
		private void detach_hatZutat(hatZutat entity)
		{
			this.SendPropertyChanging();
			entity.Zutat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[BE-Nutzer]")]
	public partial class BE_Nutzer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _E_Mail;
		
		private System.DateTime _letzterLogin;
		
		private bool _Admin;
		
		private int _Stretch;
		
		private string _Algo;
		
		private string _Salt;
		
		private string _Hash;
		
		private EntitySet<Bewertung> _Bewertung;
		
		private EntitySet<FE_Nutzer> _FE_Nutzer;
		
		private EntitySet<hatRechte> _hatRechte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnletzterLoginChanging(System.DateTime value);
    partial void OnletzterLoginChanged();
    partial void OnAdminChanging(bool value);
    partial void OnAdminChanged();
    partial void OnStretchChanging(int value);
    partial void OnStretchChanged();
    partial void OnAlgoChanging(string value);
    partial void OnAlgoChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    #endregion
		
		public BE_Nutzer()
		{
			this._Bewertung = new EntitySet<Bewertung>(new Action<Bewertung>(this.attach_Bewertung), new Action<Bewertung>(this.detach_Bewertung));
			this._FE_Nutzer = new EntitySet<FE_Nutzer>(new Action<FE_Nutzer>(this.attach_FE_Nutzer), new Action<FE_Nutzer>(this.detach_FE_Nutzer));
			this._hatRechte = new EntitySet<hatRechte>(new Action<hatRechte>(this.attach_hatRechte), new Action<hatRechte>(this.detach_hatRechte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_letzterLogin", DbType="DateTime NOT NULL")]
		public System.DateTime letzterLogin
		{
			get
			{
				return this._letzterLogin;
			}
			set
			{
				if ((this._letzterLogin != value))
				{
					this.OnletzterLoginChanging(value);
					this.SendPropertyChanging();
					this._letzterLogin = value;
					this.SendPropertyChanged("letzterLogin");
					this.OnletzterLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit NOT NULL")]
		public bool Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stretch", DbType="Int NOT NULL")]
		public int Stretch
		{
			get
			{
				return this._Stretch;
			}
			set
			{
				if ((this._Stretch != value))
				{
					this.OnStretchChanging(value);
					this.SendPropertyChanging();
					this._Stretch = value;
					this.SendPropertyChanged("Stretch");
					this.OnStretchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Algo", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Algo
		{
			get
			{
				return this._Algo;
			}
			set
			{
				if ((this._Algo != value))
				{
					this.OnAlgoChanging(value);
					this.SendPropertyChanging();
					this._Algo = value;
					this.SendPropertyChanged("Algo");
					this.OnAlgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_Bewertung", Storage="_Bewertung", ThisKey="ID", OtherKey="FK_BE_Nutzer")]
		public EntitySet<Bewertung> Bewertung
		{
			get
			{
				return this._Bewertung;
			}
			set
			{
				this._Bewertung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_FE_Nutzer", Storage="_FE_Nutzer", ThisKey="ID", OtherKey="FK_BE_Nutzer")]
		public EntitySet<FE_Nutzer> FE_Nutzer
		{
			get
			{
				return this._FE_Nutzer;
			}
			set
			{
				this._FE_Nutzer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_hatRechte", Storage="_hatRechte", ThisKey="ID", OtherKey="FK_BE_Nutzer")]
		public EntitySet<hatRechte> hatRechte
		{
			get
			{
				return this._hatRechte;
			}
			set
			{
				this._hatRechte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bewertung(Bewertung entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = this;
		}
		
		private void detach_Bewertung(Bewertung entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = null;
		}
		
		private void attach_FE_Nutzer(FE_Nutzer entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = this;
		}
		
		private void detach_FE_Nutzer(FE_Nutzer entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = null;
		}
		
		private void attach_hatRechte(hatRechte entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = this;
		}
		
		private void detach_hatRechte(hatRechte entity)
		{
			this.SendPropertyChanging();
			entity.BE_Nutzer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bewertung")]
	public partial class Bewertung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _FK_BE_Nutzer;
		
		private int _Sichtungen;
		
		private int _Note;
		
		private string _Bemerkung;
		
		private EntitySet<Schreibt> _Schreibt;
		
		private EntityRef<BE_Nutzer> _BE_Nutzer;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_BE_NutzerChanging(System.Nullable<int> value);
    partial void OnFK_BE_NutzerChanged();
    partial void OnSichtungenChanging(int value);
    partial void OnSichtungenChanged();
    partial void OnNoteChanging(int value);
    partial void OnNoteChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    #endregion
		
		public Bewertung()
		{
			this._Schreibt = new EntitySet<Schreibt>(new Action<Schreibt>(this.attach_Schreibt), new Action<Schreibt>(this.detach_Schreibt));
			this._BE_Nutzer = default(EntityRef<BE_Nutzer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_BE_Nutzer", DbType="Int")]
		public System.Nullable<int> FK_BE_Nutzer
		{
			get
			{
				return this._FK_BE_Nutzer;
			}
			set
			{
				if ((this._FK_BE_Nutzer != value))
				{
					if (this._BE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_BE_Nutzer = value;
					this.SendPropertyChanged("FK_BE_Nutzer");
					this.OnFK_BE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sichtungen", DbType="Int NOT NULL")]
		public int Sichtungen
		{
			get
			{
				return this._Sichtungen;
			}
			set
			{
				if ((this._Sichtungen != value))
				{
					this.OnSichtungenChanging(value);
					this.SendPropertyChanging();
					this._Sichtungen = value;
					this.SendPropertyChanged("Sichtungen");
					this.OnSichtungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="Int NOT NULL")]
		public int Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bewertung_Schreibt", Storage="_Schreibt", ThisKey="ID", OtherKey="FK_Bewertung")]
		public EntitySet<Schreibt> Schreibt
		{
			get
			{
				return this._Schreibt;
			}
			set
			{
				this._Schreibt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_Bewertung", Storage="_BE_Nutzer", ThisKey="FK_BE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public BE_Nutzer BE_Nutzer
		{
			get
			{
				return this._BE_Nutzer.Entity;
			}
			set
			{
				BE_Nutzer previousValue = this._BE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._BE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BE_Nutzer.Entity = null;
						previousValue.Bewertung.Remove(this);
					}
					this._BE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.Bewertung.Add(this);
						this._FK_BE_Nutzer = value.ID;
					}
					else
					{
						this._FK_BE_Nutzer = default(Nullable<int>);
					}
					this.SendPropertyChanged("BE_Nutzer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.Bewertung = this;
		}
		
		private void detach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.Bewertung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bild")]
	public partial class Bild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Data.Linq.Binary _Binärdaten;
		
		private string _Alt_Text;
		
		private string _Title;
		
		private string _Unterschrift;
		
		private EntitySet<Kategorie> _Kategorie;
		
		private EntitySet<Produkt> _Produkt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBinärdatenChanging(System.Data.Linq.Binary value);
    partial void OnBinärdatenChanged();
    partial void OnAlt_TextChanging(string value);
    partial void OnAlt_TextChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUnterschriftChanging(string value);
    partial void OnUnterschriftChanged();
    #endregion
		
		public Bild()
		{
			this._Kategorie = new EntitySet<Kategorie>(new Action<Kategorie>(this.attach_Kategorie), new Action<Kategorie>(this.detach_Kategorie));
			this._Produkt = new EntitySet<Produkt>(new Action<Produkt>(this.attach_Produkt), new Action<Produkt>(this.detach_Produkt));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Binärdaten", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Binärdaten
		{
			get
			{
				return this._Binärdaten;
			}
			set
			{
				if ((this._Binärdaten != value))
				{
					this.OnBinärdatenChanging(value);
					this.SendPropertyChanging();
					this._Binärdaten = value;
					this.SendPropertyChanged("Binärdaten");
					this.OnBinärdatenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt_Text", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Alt_Text
		{
			get
			{
				return this._Alt_Text;
			}
			set
			{
				if ((this._Alt_Text != value))
				{
					this.OnAlt_TextChanging(value);
					this.SendPropertyChanging();
					this._Alt_Text = value;
					this.SendPropertyChanged("Alt_Text");
					this.OnAlt_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unterschrift", DbType="VarChar(50)")]
		public string Unterschrift
		{
			get
			{
				return this._Unterschrift;
			}
			set
			{
				if ((this._Unterschrift != value))
				{
					this.OnUnterschriftChanging(value);
					this.SendPropertyChanging();
					this._Unterschrift = value;
					this.SendPropertyChanged("Unterschrift");
					this.OnUnterschriftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bild_Kategorie", Storage="_Kategorie", ThisKey="ID", OtherKey="FK_Bild")]
		public EntitySet<Kategorie> Kategorie
		{
			get
			{
				return this._Kategorie;
			}
			set
			{
				this._Kategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bild_Produkt", Storage="_Produkt", ThisKey="ID", OtherKey="FK_Bild")]
		public EntitySet<Produkt> Produkt
		{
			get
			{
				return this._Produkt;
			}
			set
			{
				this._Produkt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorie(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Bild = this;
		}
		
		private void detach_Kategorie(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Bild = null;
		}
		
		private void attach_Produkt(Produkt entity)
		{
			this.SendPropertyChanging();
			entity.Bild = this;
		}
		
		private void detach_Produkt(Produkt entity)
		{
			this.SendPropertyChanging();
			entity.Bild = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[FE-Nutzer]")]
	public partial class FE_Nutzer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _FK_BE_Nutzer;
		
		private bool _Aktiv;
		
		private System.DateTime _letzterLogin;
		
		private int _Stretch;
		
		private string _Algo;
		
		private string _Salt;
		
		private string _Hash;
		
		private EntitySet<Befreundet> _Befreundet;
		
		private EntitySet<Befreundet> _Befreundet1;
		
		private EntityRef<FH_Angehörige> _FH_Angehörige;
		
		private EntityRef<Gast> _Gast;
		
		private EntitySet<Kauft> _Kauft;
		
		private EntityRef<BE_Nutzer> _BE_Nutzer;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_BE_NutzerChanging(System.Nullable<int> value);
    partial void OnFK_BE_NutzerChanged();
    partial void OnAktivChanging(bool value);
    partial void OnAktivChanged();
    partial void OnletzterLoginChanging(System.DateTime value);
    partial void OnletzterLoginChanged();
    partial void OnStretchChanging(int value);
    partial void OnStretchChanged();
    partial void OnAlgoChanging(string value);
    partial void OnAlgoChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    #endregion
		
		public FE_Nutzer()
		{
			this._Befreundet = new EntitySet<Befreundet>(new Action<Befreundet>(this.attach_Befreundet), new Action<Befreundet>(this.detach_Befreundet));
			this._Befreundet1 = new EntitySet<Befreundet>(new Action<Befreundet>(this.attach_Befreundet1), new Action<Befreundet>(this.detach_Befreundet1));
			this._FH_Angehörige = default(EntityRef<FH_Angehörige>);
			this._Gast = default(EntityRef<Gast>);
			this._Kauft = new EntitySet<Kauft>(new Action<Kauft>(this.attach_Kauft), new Action<Kauft>(this.detach_Kauft));
			this._BE_Nutzer = default(EntityRef<BE_Nutzer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_BE_Nutzer", DbType="Int")]
		public System.Nullable<int> FK_BE_Nutzer
		{
			get
			{
				return this._FK_BE_Nutzer;
			}
			set
			{
				if ((this._FK_BE_Nutzer != value))
				{
					if (this._BE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_BE_Nutzer = value;
					this.SendPropertyChanged("FK_BE_Nutzer");
					this.OnFK_BE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktiv", DbType="Bit NOT NULL")]
		public bool Aktiv
		{
			get
			{
				return this._Aktiv;
			}
			set
			{
				if ((this._Aktiv != value))
				{
					this.OnAktivChanging(value);
					this.SendPropertyChanging();
					this._Aktiv = value;
					this.SendPropertyChanged("Aktiv");
					this.OnAktivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_letzterLogin", DbType="DateTime NOT NULL")]
		public System.DateTime letzterLogin
		{
			get
			{
				return this._letzterLogin;
			}
			set
			{
				if ((this._letzterLogin != value))
				{
					this.OnletzterLoginChanging(value);
					this.SendPropertyChanging();
					this._letzterLogin = value;
					this.SendPropertyChanged("letzterLogin");
					this.OnletzterLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stretch", DbType="Int NOT NULL")]
		public int Stretch
		{
			get
			{
				return this._Stretch;
			}
			set
			{
				if ((this._Stretch != value))
				{
					this.OnStretchChanging(value);
					this.SendPropertyChanging();
					this._Stretch = value;
					this.SendPropertyChanged("Stretch");
					this.OnStretchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Algo", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Algo
		{
			get
			{
				return this._Algo;
			}
			set
			{
				if ((this._Algo != value))
				{
					this.OnAlgoChanging(value);
					this.SendPropertyChanging();
					this._Algo = value;
					this.SendPropertyChanged("Algo");
					this.OnAlgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="Char(24) NOT NULL", CanBeNull=false)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Befreundet", Storage="_Befreundet", ThisKey="ID", OtherKey="FK_FE_Nutzer1")]
		public EntitySet<Befreundet> Befreundet
		{
			get
			{
				return this._Befreundet;
			}
			set
			{
				this._Befreundet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Befreundet1", Storage="_Befreundet1", ThisKey="ID", OtherKey="FK_FE_Nutzer2")]
		public EntitySet<Befreundet> Befreundet1
		{
			get
			{
				return this._Befreundet1;
			}
			set
			{
				this._Befreundet1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_FH_Angehörige", Storage="_FH_Angehörige", ThisKey="ID", OtherKey="FK_FE_Nutzer", IsUnique=true, IsForeignKey=false)]
		public FH_Angehörige FH_Angehörige
		{
			get
			{
				return this._FH_Angehörige.Entity;
			}
			set
			{
				FH_Angehörige previousValue = this._FH_Angehörige.Entity;
				if (((previousValue != value) 
							|| (this._FH_Angehörige.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FH_Angehörige.Entity = null;
						previousValue.FE_Nutzer = null;
					}
					this._FH_Angehörige.Entity = value;
					if ((value != null))
					{
						value.FE_Nutzer = this;
					}
					this.SendPropertyChanged("FH_Angehörige");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Gast", Storage="_Gast", ThisKey="ID", OtherKey="FK_FE_Nutzer", IsUnique=true, IsForeignKey=false)]
		public Gast Gast
		{
			get
			{
				return this._Gast.Entity;
			}
			set
			{
				Gast previousValue = this._Gast.Entity;
				if (((previousValue != value) 
							|| (this._Gast.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gast.Entity = null;
						previousValue.FE_Nutzer = null;
					}
					this._Gast.Entity = value;
					if ((value != null))
					{
						value.FE_Nutzer = this;
					}
					this.SendPropertyChanged("Gast");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Kauft", Storage="_Kauft", ThisKey="ID", OtherKey="FK_FE_Nutzer")]
		public EntitySet<Kauft> Kauft
		{
			get
			{
				return this._Kauft;
			}
			set
			{
				this._Kauft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_FE_Nutzer", Storage="_BE_Nutzer", ThisKey="FK_BE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public BE_Nutzer BE_Nutzer
		{
			get
			{
				return this._BE_Nutzer.Entity;
			}
			set
			{
				BE_Nutzer previousValue = this._BE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._BE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BE_Nutzer.Entity = null;
						previousValue.FE_Nutzer.Remove(this);
					}
					this._BE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.FE_Nutzer.Add(this);
						this._FK_BE_Nutzer = value.ID;
					}
					else
					{
						this._FK_BE_Nutzer = default(Nullable<int>);
					}
					this.SendPropertyChanged("BE_Nutzer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Befreundet(Befreundet entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer = this;
		}
		
		private void detach_Befreundet(Befreundet entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer = null;
		}
		
		private void attach_Befreundet1(Befreundet entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer1 = this;
		}
		
		private void detach_Befreundet1(Befreundet entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer1 = null;
		}
		
		private void attach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer = this;
		}
		
		private void detach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.FE_Nutzer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[FH-Angehörige]")]
	public partial class FH_Angehörige : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_FE_Nutzer;
		
		private string _Name;
		
		private string _E_Mail;
		
		private int _Fachbereich;
		
		private EntityRef<Mitarbeiter> _Mitarbeiter;
		
		private EntitySet<Schreibt> _Schreibt;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<FE_Nutzer> _FE_Nutzer;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_FE_NutzerChanging(int value);
    partial void OnFK_FE_NutzerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnFachbereichChanging(int value);
    partial void OnFachbereichChanged();
    #endregion
		
		public FH_Angehörige()
		{
			this._Mitarbeiter = default(EntityRef<Mitarbeiter>);
			this._Schreibt = new EntitySet<Schreibt>(new Action<Schreibt>(this.attach_Schreibt), new Action<Schreibt>(this.detach_Schreibt));
			this._Student = default(EntityRef<Student>);
			this._FE_Nutzer = default(EntityRef<FE_Nutzer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FE_Nutzer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FE_Nutzer
		{
			get
			{
				return this._FK_FE_Nutzer;
			}
			set
			{
				if ((this._FK_FE_Nutzer != value))
				{
					if (this._FE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_FE_Nutzer = value;
					this.SendPropertyChanged("FK_FE_Nutzer");
					this.OnFK_FE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fachbereich", DbType="Int NOT NULL")]
		public int Fachbereich
		{
			get
			{
				return this._Fachbereich;
			}
			set
			{
				if ((this._Fachbereich != value))
				{
					this.OnFachbereichChanging(value);
					this.SendPropertyChanging();
					this._Fachbereich = value;
					this.SendPropertyChanged("Fachbereich");
					this.OnFachbereichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Mitarbeiter", Storage="_Mitarbeiter", ThisKey="FK_FE_Nutzer", OtherKey="FK_FH_Angehörige", IsUnique=true, IsForeignKey=false)]
		public Mitarbeiter Mitarbeiter
		{
			get
			{
				return this._Mitarbeiter.Entity;
			}
			set
			{
				Mitarbeiter previousValue = this._Mitarbeiter.Entity;
				if (((previousValue != value) 
							|| (this._Mitarbeiter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mitarbeiter.Entity = null;
						previousValue.FH_Angehörige = null;
					}
					this._Mitarbeiter.Entity = value;
					if ((value != null))
					{
						value.FH_Angehörige = this;
					}
					this.SendPropertyChanged("Mitarbeiter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Schreibt", Storage="_Schreibt", ThisKey="FK_FE_Nutzer", OtherKey="FK_FH_Angehörige")]
		public EntitySet<Schreibt> Schreibt
		{
			get
			{
				return this._Schreibt;
			}
			set
			{
				this._Schreibt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Student", Storage="_Student", ThisKey="FK_FE_Nutzer", OtherKey="FK_FH_Angehörige", IsUnique=true, IsForeignKey=false)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.FH_Angehörige = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.FH_Angehörige = this;
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_FH_Angehörige", Storage="_FE_Nutzer", ThisKey="FK_FE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public FE_Nutzer FE_Nutzer
		{
			get
			{
				return this._FE_Nutzer.Entity;
			}
			set
			{
				FE_Nutzer previousValue = this._FE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._FE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FE_Nutzer.Entity = null;
						previousValue.FH_Angehörige = null;
					}
					this._FE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.FH_Angehörige = this;
						this._FK_FE_Nutzer = value.ID;
					}
					else
					{
						this._FK_FE_Nutzer = default(int);
					}
					this.SendPropertyChanged("FE_Nutzer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.FH_Angehörige = this;
		}
		
		private void detach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.FH_Angehörige = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gast")]
	public partial class Gast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_FE_Nutzer;
		
		private string _Name;
		
		private System.DateTime _von;
		
		private System.DateTime _bis;
		
		private EntityRef<FE_Nutzer> _FE_Nutzer;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_FE_NutzerChanging(int value);
    partial void OnFK_FE_NutzerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnvonChanging(System.DateTime value);
    partial void OnvonChanged();
    partial void OnbisChanging(System.DateTime value);
    partial void OnbisChanged();
    #endregion
		
		public Gast()
		{
			this._FE_Nutzer = default(EntityRef<FE_Nutzer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FE_Nutzer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FE_Nutzer
		{
			get
			{
				return this._FK_FE_Nutzer;
			}
			set
			{
				if ((this._FK_FE_Nutzer != value))
				{
					if (this._FE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_FE_Nutzer = value;
					this.SendPropertyChanged("FK_FE_Nutzer");
					this.OnFK_FE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_von", DbType="Date NOT NULL")]
		public System.DateTime von
		{
			get
			{
				return this._von;
			}
			set
			{
				if ((this._von != value))
				{
					this.OnvonChanging(value);
					this.SendPropertyChanging();
					this._von = value;
					this.SendPropertyChanged("von");
					this.OnvonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bis", DbType="Date NOT NULL")]
		public System.DateTime bis
		{
			get
			{
				return this._bis;
			}
			set
			{
				if ((this._bis != value))
				{
					this.OnbisChanging(value);
					this.SendPropertyChanging();
					this._bis = value;
					this.SendPropertyChanged("bis");
					this.OnbisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Gast", Storage="_FE_Nutzer", ThisKey="FK_FE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public FE_Nutzer FE_Nutzer
		{
			get
			{
				return this._FE_Nutzer.Entity;
			}
			set
			{
				FE_Nutzer previousValue = this._FE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._FE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FE_Nutzer.Entity = null;
						previousValue.Gast = null;
					}
					this._FE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.Gast = this;
						this._FK_FE_Nutzer = value.ID;
					}
					else
					{
						this._FK_FE_Nutzer = default(int);
					}
					this.SendPropertyChanged("FE_Nutzer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hatRechte")]
	public partial class hatRechte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_BE_Nutzer;
		
		private int _FK_Rechte;
		
		private EntityRef<BE_Nutzer> _BE_Nutzer;
		
		private EntityRef<Rechte> _Rechte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_BE_NutzerChanging(int value);
    partial void OnFK_BE_NutzerChanged();
    partial void OnFK_RechteChanging(int value);
    partial void OnFK_RechteChanged();
    #endregion
		
		public hatRechte()
		{
			this._BE_Nutzer = default(EntityRef<BE_Nutzer>);
			this._Rechte = default(EntityRef<Rechte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_BE_Nutzer", DbType="Int NOT NULL")]
		public int FK_BE_Nutzer
		{
			get
			{
				return this._FK_BE_Nutzer;
			}
			set
			{
				if ((this._FK_BE_Nutzer != value))
				{
					if (this._BE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_BE_Nutzer = value;
					this.SendPropertyChanged("FK_BE_Nutzer");
					this.OnFK_BE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Rechte", DbType="Int NOT NULL")]
		public int FK_Rechte
		{
			get
			{
				return this._FK_Rechte;
			}
			set
			{
				if ((this._FK_Rechte != value))
				{
					if (this._Rechte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_RechteChanging(value);
					this.SendPropertyChanging();
					this._FK_Rechte = value;
					this.SendPropertyChanged("FK_Rechte");
					this.OnFK_RechteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BE_Nutzer_hatRechte", Storage="_BE_Nutzer", ThisKey="FK_BE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public BE_Nutzer BE_Nutzer
		{
			get
			{
				return this._BE_Nutzer.Entity;
			}
			set
			{
				BE_Nutzer previousValue = this._BE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._BE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BE_Nutzer.Entity = null;
						previousValue.hatRechte.Remove(this);
					}
					this._BE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.hatRechte.Add(this);
						this._FK_BE_Nutzer = value.ID;
					}
					else
					{
						this._FK_BE_Nutzer = default(int);
					}
					this.SendPropertyChanged("BE_Nutzer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rechte_hatRechte", Storage="_Rechte", ThisKey="FK_Rechte", OtherKey="ID", IsForeignKey=true)]
		public Rechte Rechte
		{
			get
			{
				return this._Rechte.Entity;
			}
			set
			{
				Rechte previousValue = this._Rechte.Entity;
				if (((previousValue != value) 
							|| (this._Rechte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rechte.Entity = null;
						previousValue.hatRechte.Remove(this);
					}
					this._Rechte.Entity = value;
					if ((value != null))
					{
						value.hatRechte.Add(this);
						this._FK_Rechte = value.ID;
					}
					else
					{
						this._FK_Rechte = default(int);
					}
					this.SendPropertyChanged("Rechte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hatZutat")]
	public partial class hatZutat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_Produkt;
		
		private int _FK_Zutat;
		
		private EntityRef<Zutat> _Zutat;
		
		private EntityRef<Produkt> _Produkt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_ProduktChanging(int value);
    partial void OnFK_ProduktChanged();
    partial void OnFK_ZutatChanging(int value);
    partial void OnFK_ZutatChanged();
    #endregion
		
		public hatZutat()
		{
			this._Zutat = default(EntityRef<Zutat>);
			this._Produkt = default(EntityRef<Produkt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Produkt", DbType="Int NOT NULL")]
		public int FK_Produkt
		{
			get
			{
				return this._FK_Produkt;
			}
			set
			{
				if ((this._FK_Produkt != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ProduktChanging(value);
					this.SendPropertyChanging();
					this._FK_Produkt = value;
					this.SendPropertyChanged("FK_Produkt");
					this.OnFK_ProduktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Zutat", DbType="Int NOT NULL")]
		public int FK_Zutat
		{
			get
			{
				return this._FK_Zutat;
			}
			set
			{
				if ((this._FK_Zutat != value))
				{
					if (this._Zutat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ZutatChanging(value);
					this.SendPropertyChanging();
					this._FK_Zutat = value;
					this.SendPropertyChanged("FK_Zutat");
					this.OnFK_ZutatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zutat_hatZutat", Storage="_Zutat", ThisKey="FK_Zutat", OtherKey="ID", IsForeignKey=true)]
		public Zutat Zutat
		{
			get
			{
				return this._Zutat.Entity;
			}
			set
			{
				Zutat previousValue = this._Zutat.Entity;
				if (((previousValue != value) 
							|| (this._Zutat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zutat.Entity = null;
						previousValue.hatZutat.Remove(this);
					}
					this._Zutat.Entity = value;
					if ((value != null))
					{
						value.hatZutat.Add(this);
						this._FK_Zutat = value.ID;
					}
					else
					{
						this._FK_Zutat = default(int);
					}
					this.SendPropertyChanged("Zutat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_hatZutat", Storage="_Produkt", ThisKey="FK_Produkt", OtherKey="ID", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.hatZutat.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.hatZutat.Add(this);
						this._FK_Produkt = value.ID;
					}
					else
					{
						this._FK_Produkt = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorie")]
	public partial class Kategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _FK_Oberkategorie;
		
		private System.Nullable<int> _FK_Bild;
		
		private string _Bezeichnung;
		
		private EntitySet<Kategorie> _Kategorie2;
		
		private EntitySet<Produkt> _Produkt;
		
		private EntityRef<Bild> _Bild;
		
		private EntityRef<Kategorie> _Kategorie1;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_OberkategorieChanging(System.Nullable<int> value);
    partial void OnFK_OberkategorieChanged();
    partial void OnFK_BildChanging(System.Nullable<int> value);
    partial void OnFK_BildChanged();
    partial void OnBezeichnungChanging(string value);
    partial void OnBezeichnungChanged();
    #endregion
		
		public Kategorie()
		{
			this._Kategorie2 = new EntitySet<Kategorie>(new Action<Kategorie>(this.attach_Kategorie2), new Action<Kategorie>(this.detach_Kategorie2));
			this._Produkt = new EntitySet<Produkt>(new Action<Produkt>(this.attach_Produkt), new Action<Produkt>(this.detach_Produkt));
			this._Bild = default(EntityRef<Bild>);
			this._Kategorie1 = default(EntityRef<Kategorie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Oberkategorie", DbType="Int")]
		public System.Nullable<int> FK_Oberkategorie
		{
			get
			{
				return this._FK_Oberkategorie;
			}
			set
			{
				if ((this._FK_Oberkategorie != value))
				{
					if (this._Kategorie1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_OberkategorieChanging(value);
					this.SendPropertyChanging();
					this._FK_Oberkategorie = value;
					this.SendPropertyChanged("FK_Oberkategorie");
					this.OnFK_OberkategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Bild", DbType="Int")]
		public System.Nullable<int> FK_Bild
		{
			get
			{
				return this._FK_Bild;
			}
			set
			{
				if ((this._FK_Bild != value))
				{
					if (this._Bild.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BildChanging(value);
					this.SendPropertyChanging();
					this._FK_Bild = value;
					this.SendPropertyChanged("FK_Bild");
					this.OnFK_BildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this.OnBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Bezeichnung = value;
					this.SendPropertyChanged("Bezeichnung");
					this.OnBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Kategorie", Storage="_Kategorie2", ThisKey="ID", OtherKey="FK_Oberkategorie")]
		public EntitySet<Kategorie> Kategorie2
		{
			get
			{
				return this._Kategorie2;
			}
			set
			{
				this._Kategorie2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Produkt", Storage="_Produkt", ThisKey="ID", OtherKey="FK_Kategorie")]
		public EntitySet<Produkt> Produkt
		{
			get
			{
				return this._Produkt;
			}
			set
			{
				this._Produkt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bild_Kategorie", Storage="_Bild", ThisKey="FK_Bild", OtherKey="ID", IsForeignKey=true)]
		public Bild Bild
		{
			get
			{
				return this._Bild.Entity;
			}
			set
			{
				Bild previousValue = this._Bild.Entity;
				if (((previousValue != value) 
							|| (this._Bild.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bild.Entity = null;
						previousValue.Kategorie.Remove(this);
					}
					this._Bild.Entity = value;
					if ((value != null))
					{
						value.Kategorie.Add(this);
						this._FK_Bild = value.ID;
					}
					else
					{
						this._FK_Bild = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bild");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Kategorie", Storage="_Kategorie1", ThisKey="FK_Oberkategorie", OtherKey="ID", IsForeignKey=true)]
		public Kategorie Kategorie1
		{
			get
			{
				return this._Kategorie1.Entity;
			}
			set
			{
				Kategorie previousValue = this._Kategorie1.Entity;
				if (((previousValue != value) 
							|| (this._Kategorie1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorie1.Entity = null;
						previousValue.Kategorie2.Remove(this);
					}
					this._Kategorie1.Entity = value;
					if ((value != null))
					{
						value.Kategorie2.Add(this);
						this._FK_Oberkategorie = value.ID;
					}
					else
					{
						this._FK_Oberkategorie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategorie1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorie2(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie1 = this;
		}
		
		private void detach_Kategorie2(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie1 = null;
		}
		
		private void attach_Produkt(Produkt entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = this;
		}
		
		private void detach_Produkt(Produkt entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kauft")]
	public partial class Kauft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_Produkt;
		
		private int _FK_FE_Nutzer;
		
		private int _FK_Zahlung;
		
		private decimal _Endpreis;
		
		private EntityRef<FE_Nutzer> _FE_Nutzer;
		
		private EntityRef<Produkt> _Produkt;
		
		private EntityRef<Zahlung> _Zahlung;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_ProduktChanging(int value);
    partial void OnFK_ProduktChanged();
    partial void OnFK_FE_NutzerChanging(int value);
    partial void OnFK_FE_NutzerChanged();
    partial void OnFK_ZahlungChanging(int value);
    partial void OnFK_ZahlungChanged();
    partial void OnEndpreisChanging(decimal value);
    partial void OnEndpreisChanged();
    #endregion
		
		public Kauft()
		{
			this._FE_Nutzer = default(EntityRef<FE_Nutzer>);
			this._Produkt = default(EntityRef<Produkt>);
			this._Zahlung = default(EntityRef<Zahlung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Produkt", DbType="Int NOT NULL")]
		public int FK_Produkt
		{
			get
			{
				return this._FK_Produkt;
			}
			set
			{
				if ((this._FK_Produkt != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ProduktChanging(value);
					this.SendPropertyChanging();
					this._FK_Produkt = value;
					this.SendPropertyChanged("FK_Produkt");
					this.OnFK_ProduktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FE_Nutzer", DbType="Int NOT NULL")]
		public int FK_FE_Nutzer
		{
			get
			{
				return this._FK_FE_Nutzer;
			}
			set
			{
				if ((this._FK_FE_Nutzer != value))
				{
					if (this._FE_Nutzer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FE_NutzerChanging(value);
					this.SendPropertyChanging();
					this._FK_FE_Nutzer = value;
					this.SendPropertyChanged("FK_FE_Nutzer");
					this.OnFK_FE_NutzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Zahlung", DbType="Int NOT NULL")]
		public int FK_Zahlung
		{
			get
			{
				return this._FK_Zahlung;
			}
			set
			{
				if ((this._FK_Zahlung != value))
				{
					if (this._Zahlung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ZahlungChanging(value);
					this.SendPropertyChanging();
					this._FK_Zahlung = value;
					this.SendPropertyChanged("FK_Zahlung");
					this.OnFK_ZahlungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endpreis", DbType="Decimal(5,2) NOT NULL")]
		public decimal Endpreis
		{
			get
			{
				return this._Endpreis;
			}
			set
			{
				if ((this._Endpreis != value))
				{
					this.OnEndpreisChanging(value);
					this.SendPropertyChanging();
					this._Endpreis = value;
					this.SendPropertyChanged("Endpreis");
					this.OnEndpreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FE_Nutzer_Kauft", Storage="_FE_Nutzer", ThisKey="FK_FE_Nutzer", OtherKey="ID", IsForeignKey=true)]
		public FE_Nutzer FE_Nutzer
		{
			get
			{
				return this._FE_Nutzer.Entity;
			}
			set
			{
				FE_Nutzer previousValue = this._FE_Nutzer.Entity;
				if (((previousValue != value) 
							|| (this._FE_Nutzer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FE_Nutzer.Entity = null;
						previousValue.Kauft.Remove(this);
					}
					this._FE_Nutzer.Entity = value;
					if ((value != null))
					{
						value.Kauft.Add(this);
						this._FK_FE_Nutzer = value.ID;
					}
					else
					{
						this._FK_FE_Nutzer = default(int);
					}
					this.SendPropertyChanged("FE_Nutzer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Kauft", Storage="_Produkt", ThisKey="FK_Produkt", OtherKey="ID", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.Kauft.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.Kauft.Add(this);
						this._FK_Produkt = value.ID;
					}
					else
					{
						this._FK_Produkt = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zahlung_Kauft", Storage="_Zahlung", ThisKey="FK_Zahlung", OtherKey="ID", IsForeignKey=true)]
		public Zahlung Zahlung
		{
			get
			{
				return this._Zahlung.Entity;
			}
			set
			{
				Zahlung previousValue = this._Zahlung.Entity;
				if (((previousValue != value) 
							|| (this._Zahlung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zahlung.Entity = null;
						previousValue.Kauft.Remove(this);
					}
					this._Zahlung.Entity = value;
					if ((value != null))
					{
						value.Kauft.Add(this);
						this._FK_Zahlung = value.ID;
					}
					else
					{
						this._FK_Zahlung = default(int);
					}
					this.SendPropertyChanged("Zahlung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mitarbeiter")]
	public partial class Mitarbeiter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_FH_Angehörige;
		
		private int _MA_Nummer;
		
		private string _Büro;
		
		private EntityRef<FH_Angehörige> _FH_Angehörige;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_FH_AngehörigeChanging(int value);
    partial void OnFK_FH_AngehörigeChanged();
    partial void OnMA_NummerChanging(int value);
    partial void OnMA_NummerChanged();
    partial void OnBüroChanging(string value);
    partial void OnBüroChanged();
    #endregion
		
		public Mitarbeiter()
		{
			this._FH_Angehörige = default(EntityRef<FH_Angehörige>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FH_Angehörige", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FH_Angehörige
		{
			get
			{
				return this._FK_FH_Angehörige;
			}
			set
			{
				if ((this._FK_FH_Angehörige != value))
				{
					if (this._FH_Angehörige.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FH_AngehörigeChanging(value);
					this.SendPropertyChanging();
					this._FK_FH_Angehörige = value;
					this.SendPropertyChanged("FK_FH_Angehörige");
					this.OnFK_FH_AngehörigeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_Nummer", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MA_Nummer
		{
			get
			{
				return this._MA_Nummer;
			}
			set
			{
				if ((this._MA_Nummer != value))
				{
					this.OnMA_NummerChanging(value);
					this.SendPropertyChanging();
					this._MA_Nummer = value;
					this.SendPropertyChanged("MA_Nummer");
					this.OnMA_NummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Büro", DbType="VarChar(10)")]
		public string Büro
		{
			get
			{
				return this._Büro;
			}
			set
			{
				if ((this._Büro != value))
				{
					this.OnBüroChanging(value);
					this.SendPropertyChanging();
					this._Büro = value;
					this.SendPropertyChanged("Büro");
					this.OnBüroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Mitarbeiter", Storage="_FH_Angehörige", ThisKey="FK_FH_Angehörige", OtherKey="FK_FE_Nutzer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FH_Angehörige FH_Angehörige
		{
			get
			{
				return this._FH_Angehörige.Entity;
			}
			set
			{
				FH_Angehörige previousValue = this._FH_Angehörige.Entity;
				if (((previousValue != value) 
							|| (this._FH_Angehörige.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FH_Angehörige.Entity = null;
						previousValue.Mitarbeiter = null;
					}
					this._FH_Angehörige.Entity = value;
					if ((value != null))
					{
						value.Mitarbeiter = this;
						this._FK_FH_Angehörige = value.FK_FE_Nutzer;
					}
					else
					{
						this._FK_FH_Angehörige = default(int);
					}
					this.SendPropertyChanged("FH_Angehörige");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preis")]
	public partial class Preis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_Produkt;
		
		private string _Rolle;
		
		private decimal _Preis1;
		
		private EntityRef<Produkt> _Produkt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_ProduktChanging(int value);
    partial void OnFK_ProduktChanged();
    partial void OnRolleChanging(string value);
    partial void OnRolleChanged();
    partial void OnPreis1Changing(decimal value);
    partial void OnPreis1Changed();
    #endregion
		
		public Preis()
		{
			this._Produkt = default(EntityRef<Produkt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Produkt", DbType="Int NOT NULL")]
		public int FK_Produkt
		{
			get
			{
				return this._FK_Produkt;
			}
			set
			{
				if ((this._FK_Produkt != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ProduktChanging(value);
					this.SendPropertyChanging();
					this._FK_Produkt = value;
					this.SendPropertyChanged("FK_Produkt");
					this.OnFK_ProduktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rolle", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Rolle
		{
			get
			{
				return this._Rolle;
			}
			set
			{
				if ((this._Rolle != value))
				{
					this.OnRolleChanging(value);
					this.SendPropertyChanging();
					this._Rolle = value;
					this.SendPropertyChanged("Rolle");
					this.OnRolleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Preis", Storage="_Preis1", DbType="Decimal(3,2) NOT NULL")]
		public decimal Preis1
		{
			get
			{
				return this._Preis1;
			}
			set
			{
				if ((this._Preis1 != value))
				{
					this.OnPreis1Changing(value);
					this.SendPropertyChanging();
					this._Preis1 = value;
					this.SendPropertyChanged("Preis1");
					this.OnPreis1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Preis", Storage="_Produkt", ThisKey="FK_Produkt", OtherKey="ID", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.Preis.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.Preis.Add(this);
						this._FK_Produkt = value.ID;
					}
					else
					{
						this._FK_Produkt = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produkt")]
	public partial class Produkt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_Kategorie;
		
		private System.Nullable<int> _FK_Bild;
		
		private string _Name;
		
		private string _Beschreibung;
		
		private System.DateTime _von;
		
		private System.DateTime _bis;
		
		private EntitySet<hatZutat> _hatZutat;
		
		private EntitySet<Kauft> _Kauft;
		
		private EntitySet<Preis> _Preis;
		
		private EntitySet<Schreibt> _Schreibt;
		
		private EntityRef<Bild> _Bild;
		
		private EntityRef<Kategorie> _Kategorie;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_KategorieChanging(int value);
    partial void OnFK_KategorieChanged();
    partial void OnFK_BildChanging(System.Nullable<int> value);
    partial void OnFK_BildChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    partial void OnvonChanging(System.DateTime value);
    partial void OnvonChanged();
    partial void OnbisChanging(System.DateTime value);
    partial void OnbisChanged();
    #endregion
		
		public Produkt()
		{
			this._hatZutat = new EntitySet<hatZutat>(new Action<hatZutat>(this.attach_hatZutat), new Action<hatZutat>(this.detach_hatZutat));
			this._Kauft = new EntitySet<Kauft>(new Action<Kauft>(this.attach_Kauft), new Action<Kauft>(this.detach_Kauft));
			this._Preis = new EntitySet<Preis>(new Action<Preis>(this.attach_Preis), new Action<Preis>(this.detach_Preis));
			this._Schreibt = new EntitySet<Schreibt>(new Action<Schreibt>(this.attach_Schreibt), new Action<Schreibt>(this.detach_Schreibt));
			this._Bild = default(EntityRef<Bild>);
			this._Kategorie = default(EntityRef<Kategorie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Kategorie", DbType="Int NOT NULL")]
		public int FK_Kategorie
		{
			get
			{
				return this._FK_Kategorie;
			}
			set
			{
				if ((this._FK_Kategorie != value))
				{
					if (this._Kategorie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_KategorieChanging(value);
					this.SendPropertyChanging();
					this._FK_Kategorie = value;
					this.SendPropertyChanged("FK_Kategorie");
					this.OnFK_KategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Bild", DbType="Int")]
		public System.Nullable<int> FK_Bild
		{
			get
			{
				return this._FK_Bild;
			}
			set
			{
				if ((this._FK_Bild != value))
				{
					if (this._Bild.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BildChanging(value);
					this.SendPropertyChanging();
					this._FK_Bild = value;
					this.SendPropertyChanged("FK_Bild");
					this.OnFK_BildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_von", DbType="DateTime NOT NULL")]
		public System.DateTime von
		{
			get
			{
				return this._von;
			}
			set
			{
				if ((this._von != value))
				{
					this.OnvonChanging(value);
					this.SendPropertyChanging();
					this._von = value;
					this.SendPropertyChanged("von");
					this.OnvonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bis", DbType="DateTime NOT NULL")]
		public System.DateTime bis
		{
			get
			{
				return this._bis;
			}
			set
			{
				if ((this._bis != value))
				{
					this.OnbisChanging(value);
					this.SendPropertyChanging();
					this._bis = value;
					this.SendPropertyChanged("bis");
					this.OnbisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_hatZutat", Storage="_hatZutat", ThisKey="ID", OtherKey="FK_Produkt")]
		public EntitySet<hatZutat> hatZutat
		{
			get
			{
				return this._hatZutat;
			}
			set
			{
				this._hatZutat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Kauft", Storage="_Kauft", ThisKey="ID", OtherKey="FK_Produkt")]
		public EntitySet<Kauft> Kauft
		{
			get
			{
				return this._Kauft;
			}
			set
			{
				this._Kauft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Preis", Storage="_Preis", ThisKey="ID", OtherKey="FK_Produkt")]
		public EntitySet<Preis> Preis
		{
			get
			{
				return this._Preis;
			}
			set
			{
				this._Preis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Schreibt", Storage="_Schreibt", ThisKey="ID", OtherKey="FK_Produkt")]
		public EntitySet<Schreibt> Schreibt
		{
			get
			{
				return this._Schreibt;
			}
			set
			{
				this._Schreibt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bild_Produkt", Storage="_Bild", ThisKey="FK_Bild", OtherKey="ID", IsForeignKey=true)]
		public Bild Bild
		{
			get
			{
				return this._Bild.Entity;
			}
			set
			{
				Bild previousValue = this._Bild.Entity;
				if (((previousValue != value) 
							|| (this._Bild.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bild.Entity = null;
						previousValue.Produkt.Remove(this);
					}
					this._Bild.Entity = value;
					if ((value != null))
					{
						value.Produkt.Add(this);
						this._FK_Bild = value.ID;
					}
					else
					{
						this._FK_Bild = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bild");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Produkt", Storage="_Kategorie", ThisKey="FK_Kategorie", OtherKey="ID", IsForeignKey=true)]
		public Kategorie Kategorie
		{
			get
			{
				return this._Kategorie.Entity;
			}
			set
			{
				Kategorie previousValue = this._Kategorie.Entity;
				if (((previousValue != value) 
							|| (this._Kategorie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorie.Entity = null;
						previousValue.Produkt.Remove(this);
					}
					this._Kategorie.Entity = value;
					if ((value != null))
					{
						value.Produkt.Add(this);
						this._FK_Kategorie = value.ID;
					}
					else
					{
						this._FK_Kategorie = default(int);
					}
					this.SendPropertyChanged("Kategorie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hatZutat(hatZutat entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_hatZutat(hatZutat entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
		
		private void attach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
		
		private void attach_Preis(Preis entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_Preis(Preis entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
		
		private void attach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_Schreibt(Schreibt entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rechte")]
	public partial class Rechte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tabelle;
		
		private EntitySet<hatRechte> _hatRechte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTabelleChanging(string value);
    partial void OnTabelleChanged();
    #endregion
		
		public Rechte()
		{
			this._hatRechte = new EntitySet<hatRechte>(new Action<hatRechte>(this.attach_hatRechte), new Action<hatRechte>(this.detach_hatRechte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabelle", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Tabelle
		{
			get
			{
				return this._Tabelle;
			}
			set
			{
				if ((this._Tabelle != value))
				{
					this.OnTabelleChanging(value);
					this.SendPropertyChanging();
					this._Tabelle = value;
					this.SendPropertyChanged("Tabelle");
					this.OnTabelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rechte_hatRechte", Storage="_hatRechte", ThisKey="ID", OtherKey="FK_Rechte")]
		public EntitySet<hatRechte> hatRechte
		{
			get
			{
				return this._hatRechte;
			}
			set
			{
				this._hatRechte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hatRechte(hatRechte entity)
		{
			this.SendPropertyChanging();
			entity.Rechte = this;
		}
		
		private void detach_hatRechte(hatRechte entity)
		{
			this.SendPropertyChanging();
			entity.Rechte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schreibt")]
	public partial class Schreibt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FK_Bewertung;
		
		private int _FK_Produkt;
		
		private int _FK_FH_Angehörige;
		
		private EntityRef<Bewertung> _Bewertung;
		
		private EntityRef<FH_Angehörige> _FH_Angehörige;
		
		private EntityRef<Produkt> _Produkt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFK_BewertungChanging(int value);
    partial void OnFK_BewertungChanged();
    partial void OnFK_ProduktChanging(int value);
    partial void OnFK_ProduktChanged();
    partial void OnFK_FH_AngehörigeChanging(int value);
    partial void OnFK_FH_AngehörigeChanged();
    #endregion
		
		public Schreibt()
		{
			this._Bewertung = default(EntityRef<Bewertung>);
			this._FH_Angehörige = default(EntityRef<FH_Angehörige>);
			this._Produkt = default(EntityRef<Produkt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Bewertung", DbType="Int NOT NULL")]
		public int FK_Bewertung
		{
			get
			{
				return this._FK_Bewertung;
			}
			set
			{
				if ((this._FK_Bewertung != value))
				{
					if (this._Bewertung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_BewertungChanging(value);
					this.SendPropertyChanging();
					this._FK_Bewertung = value;
					this.SendPropertyChanged("FK_Bewertung");
					this.OnFK_BewertungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Produkt", DbType="Int NOT NULL")]
		public int FK_Produkt
		{
			get
			{
				return this._FK_Produkt;
			}
			set
			{
				if ((this._FK_Produkt != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ProduktChanging(value);
					this.SendPropertyChanging();
					this._FK_Produkt = value;
					this.SendPropertyChanged("FK_Produkt");
					this.OnFK_ProduktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FH_Angehörige", DbType="Int NOT NULL")]
		public int FK_FH_Angehörige
		{
			get
			{
				return this._FK_FH_Angehörige;
			}
			set
			{
				if ((this._FK_FH_Angehörige != value))
				{
					if (this._FH_Angehörige.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FH_AngehörigeChanging(value);
					this.SendPropertyChanging();
					this._FK_FH_Angehörige = value;
					this.SendPropertyChanged("FK_FH_Angehörige");
					this.OnFK_FH_AngehörigeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bewertung_Schreibt", Storage="_Bewertung", ThisKey="FK_Bewertung", OtherKey="ID", IsForeignKey=true)]
		public Bewertung Bewertung
		{
			get
			{
				return this._Bewertung.Entity;
			}
			set
			{
				Bewertung previousValue = this._Bewertung.Entity;
				if (((previousValue != value) 
							|| (this._Bewertung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bewertung.Entity = null;
						previousValue.Schreibt.Remove(this);
					}
					this._Bewertung.Entity = value;
					if ((value != null))
					{
						value.Schreibt.Add(this);
						this._FK_Bewertung = value.ID;
					}
					else
					{
						this._FK_Bewertung = default(int);
					}
					this.SendPropertyChanged("Bewertung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Schreibt", Storage="_FH_Angehörige", ThisKey="FK_FH_Angehörige", OtherKey="FK_FE_Nutzer", IsForeignKey=true)]
		public FH_Angehörige FH_Angehörige
		{
			get
			{
				return this._FH_Angehörige.Entity;
			}
			set
			{
				FH_Angehörige previousValue = this._FH_Angehörige.Entity;
				if (((previousValue != value) 
							|| (this._FH_Angehörige.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FH_Angehörige.Entity = null;
						previousValue.Schreibt.Remove(this);
					}
					this._FH_Angehörige.Entity = value;
					if ((value != null))
					{
						value.Schreibt.Add(this);
						this._FK_FH_Angehörige = value.FK_FE_Nutzer;
					}
					else
					{
						this._FK_FH_Angehörige = default(int);
					}
					this.SendPropertyChanged("FH_Angehörige");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Schreibt", Storage="_Produkt", ThisKey="FK_Produkt", OtherKey="ID", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.Schreibt.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.Schreibt.Add(this);
						this._FK_Produkt = value.ID;
					}
					else
					{
						this._FK_Produkt = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_FH_Angehörige;
		
		private int _Matrikelnummer;
		
		private string _Studiengang;
		
		private EntityRef<FH_Angehörige> _FH_Angehörige;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_FH_AngehörigeChanging(int value);
    partial void OnFK_FH_AngehörigeChanged();
    partial void OnMatrikelnummerChanging(int value);
    partial void OnMatrikelnummerChanged();
    partial void OnStudiengangChanging(string value);
    partial void OnStudiengangChanged();
    #endregion
		
		public Student()
		{
			this._FH_Angehörige = default(EntityRef<FH_Angehörige>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FH_Angehörige", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_FH_Angehörige
		{
			get
			{
				return this._FK_FH_Angehörige;
			}
			set
			{
				if ((this._FK_FH_Angehörige != value))
				{
					if (this._FH_Angehörige.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FH_AngehörigeChanging(value);
					this.SendPropertyChanging();
					this._FK_FH_Angehörige = value;
					this.SendPropertyChanged("FK_FH_Angehörige");
					this.OnFK_FH_AngehörigeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matrikelnummer", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Matrikelnummer
		{
			get
			{
				return this._Matrikelnummer;
			}
			set
			{
				if ((this._Matrikelnummer != value))
				{
					this.OnMatrikelnummerChanging(value);
					this.SendPropertyChanging();
					this._Matrikelnummer = value;
					this.SendPropertyChanged("Matrikelnummer");
					this.OnMatrikelnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studiengang", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Studiengang
		{
			get
			{
				return this._Studiengang;
			}
			set
			{
				if ((this._Studiengang != value))
				{
					this.OnStudiengangChanging(value);
					this.SendPropertyChanging();
					this._Studiengang = value;
					this.SendPropertyChanged("Studiengang");
					this.OnStudiengangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FH_Angehörige_Student", Storage="_FH_Angehörige", ThisKey="FK_FH_Angehörige", OtherKey="FK_FE_Nutzer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FH_Angehörige FH_Angehörige
		{
			get
			{
				return this._FH_Angehörige.Entity;
			}
			set
			{
				FH_Angehörige previousValue = this._FH_Angehörige.Entity;
				if (((previousValue != value) 
							|| (this._FH_Angehörige.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FH_Angehörige.Entity = null;
						previousValue.Student = null;
					}
					this._FH_Angehörige.Entity = value;
					if ((value != null))
					{
						value.Student = this;
						this._FK_FH_Angehörige = value.FK_FE_Nutzer;
					}
					else
					{
						this._FK_FH_Angehörige = default(int);
					}
					this.SendPropertyChanged("FH_Angehörige");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zahlung")]
	public partial class Zahlung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Betrag;
		
		private string _Aut_Server;
		
		private System.DateTime _Zeitstempel;
		
		private int _Status;
		
		private EntitySet<Kauft> _Kauft;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBetragChanging(decimal value);
    partial void OnBetragChanged();
    partial void OnAut_ServerChanging(string value);
    partial void OnAut_ServerChanged();
    partial void OnZeitstempelChanging(System.DateTime value);
    partial void OnZeitstempelChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Zahlung()
		{
			this._Kauft = new EntitySet<Kauft>(new Action<Kauft>(this.attach_Kauft), new Action<Kauft>(this.detach_Kauft));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Betrag", DbType="Decimal(5,2) NOT NULL")]
		public decimal Betrag
		{
			get
			{
				return this._Betrag;
			}
			set
			{
				if ((this._Betrag != value))
				{
					this.OnBetragChanging(value);
					this.SendPropertyChanging();
					this._Betrag = value;
					this.SendPropertyChanged("Betrag");
					this.OnBetragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aut_Server", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Aut_Server
		{
			get
			{
				return this._Aut_Server;
			}
			set
			{
				if ((this._Aut_Server != value))
				{
					this.OnAut_ServerChanging(value);
					this.SendPropertyChanging();
					this._Aut_Server = value;
					this.SendPropertyChanged("Aut_Server");
					this.OnAut_ServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zeitstempel", DbType="DateTime NOT NULL")]
		public System.DateTime Zeitstempel
		{
			get
			{
				return this._Zeitstempel;
			}
			set
			{
				if ((this._Zeitstempel != value))
				{
					this.OnZeitstempelChanging(value);
					this.SendPropertyChanging();
					this._Zeitstempel = value;
					this.SendPropertyChanged("Zeitstempel");
					this.OnZeitstempelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zahlung_Kauft", Storage="_Kauft", ThisKey="ID", OtherKey="FK_Zahlung")]
		public EntitySet<Kauft> Kauft
		{
			get
			{
				return this._Kauft;
			}
			set
			{
				this._Kauft.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.Zahlung = this;
		}
		
		private void detach_Kauft(Kauft entity)
		{
			this.SendPropertyChanging();
			entity.Zahlung = null;
		}
	}
}
#pragma warning restore 1591
